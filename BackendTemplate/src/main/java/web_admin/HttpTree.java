package web_admin;

import java.io.File;

import backendgame.com.core.BGUtility;
import backendgame.com.core.TimeManager;
import backendgame.com.core.server.http.HttpDirectoryTree;

public class HttpTree extends HttpDirectoryTree {

	@Override public String onDirectory(File[] listFile) {
		String listFiles="";
		if(listFile!=null)
			for(File f:listFile)
				if(f.isDirectory()) {
					listFiles = listFiles + "<tr>\n"
							+ "    <td class=\"date-column\">"
							+TimeManager.gI().getStringTime(f.lastModified())+ "</td>\n"
							+ "    <td class=\"size-column\">-</td>\n"
							+ "    <td><a href=\""
							+ f.getName()+"\""+">"
									+"üóÇÔ∏è "+f.getName()+ "</a></td>\n"
							+ "  </tr>";
				}else {
					listFiles =listFiles + "<tr>\n"
							+ "        <td class=\"date-column\">"
							+ TimeManager.gI().getStringTime(f.lastModified())+"</td>\n"
							+ "        <td class=\"size-column\">"
							+ BGUtility.getMemory(f.length())+"</td>\n"
							+ "    <td><a href=\""
							+ f.getName()+"\""+">"
									+"üìÉ  "+f.getName()+ "</a></td>\n"
							+ "  </tr>";
				}
		return "<!DOCTYPE html>\n"
				+ "<html>\n"
				+ "  <head>\n"
				+ "    <title>File Information</title>\n"
				+ "    <style>\n"
				+ "      body {\n"
				+ "        font-family: Arial, sans-serif;\n"
				+ "      }\n"
				+ "\n"
				+ "      table {\n"
				+ "        width: 100%;\n"
				+ "        border-collapse: collapse;\n"
				+ "        float: left;\n"
				+ "        margin-right: 20px;\n"
				+ "      }\n"
				+ "\n"
				+ "      th,\n"
				+ "      td {\n"
				+ "        padding: 10px;\n"
				+ "        text-align: left;\n"
				+ "        border-bottom: 1px solid #ddd;\n"
				+ "        cursor: pointer;\n"
				+ "      }\n"
				+ "\n"
				+ "      th {\n"
				+ "        background-color: #f2f2f2;\n"
				+ "      }\n"
				+ "\n"
				+ "      .date-column,\n"
				+ "      .size-column {\n"
				+ "        max-width: 30px;\n"
				+ "      }\n"
				+ "      .sort-icon {\n"
				+ "      margin-left: 5px;\n"
				+ "    }\n"
				+ "\n"
				+ "      .asc-icon::after {\n"
				+ "      content: '‚ñ≤';\n"
				+ "    }\n"
				+ "    .desc-icon::after {\n"
				+ "      content: '‚ñº';\n"
				+ "    }\n"
				+ ".back-button {\n"
				+ "      background-color: #4CAF50;\n"
				+ "      color: white;\n"
				+ "      padding: 5px 10px;\n"
				+ "		 margin-bottom: 20px;"
				+ "      border: none;\n"
				+ "      cursor: pointer;\n"
				+ "      font-size: 16px;\n"
				+ "      border-radius: 4px;\n"
				+ "    }"
				+ "a{"
				+ "text-decoration: none}"
				+ "    </style>\n"
				+ "  </head>\n"
				+ "  <body>\n"
				+ "    <h1>File Information</h1>\n"
				+ "<button class=\"back-button\" onclick=\"history.back()\">Back</button>"
				+ "    <table id=\"myTable\">\n"
				+ "      <tr>\n"
				+ "        <th class=\"date-column\">Date Created<span class=\"sort-icon\"></span></th>\n"
				+ "        <th class=\"size-column\">Size<span class=\"sort-icon\"></span></th>\n"
				+ "        <th>File Name<span class=\"sort-icon\"></span></th>\n"
				+ "      </tr>\n"
				+ listFiles+" \n"
				+ "    </table>\n"
				+ "    \n"
				+ "    <script>\n"
				+ "      function sortTable(columnIndex) {\n"
				+ "        let table, rows, switching, i, x, y, shouldSwitch, dir, switchCount = 0;\n"
				+ "        table = document.getElementById(\"myTable\");\n"
				+ "        switching = true;\n"
				+ "        dir = \"asc\"; // Set the default sorting direction to ascending\n"
				+ "        while (switching) {\n"
				+ "          switching = false;\n"
				+ "          rows = table.rows;\n"
				+ "          for (i = 1; i < (rows.length - 1); i++) {\n"
				+ "            shouldSwitch = false;\n"
				+ "            x = rows[i].getElementsByTagName(\"td\")[columnIndex];\n"
				+ "            y = rows[i + 1].getElementsByTagName(\"td\")[columnIndex];\n"
				+ "            let xValue = x.innerHTML.toLowerCase();\n"
				+ "            let yValue = y.innerHTML.toLowerCase();\n"
				+ "    \n"
				+ "            // Compare the values based on the sorting direction\n"
				+ "            if (dir === \"asc\") {\n"
				+ "              if (xValue > yValue) {\n"
				+ "                shouldSwitch = true;\n"
				+ "                break;\n"
				+ "              }\n"
				+ "            } else if (dir === \"desc\") {\n"
				+ "              if (xValue < yValue) {\n"
				+ "                shouldSwitch = true;\n"
				+ "                break;\n"
				+ "              }\n"
				+ "            }\n"
				+ "          }\n"
				+ "          if (shouldSwitch) {\n"
				+ "            rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\n"
				+ "            switching = true;\n"
				+ "            switchCount++;\n"
				+ "          } else {\n"
				+ "            // If no switching has been done and the direction is ascending,\n"
				+ "            // set the direction to descending and run the loop again\n"
				+ "            if (switchCount === 0 && dir === \"asc\") {\n"
				+ "              dir = \"desc\";\n"
				+ "              switching = true;\n"
				+ "            }\n"
				+ "          }\n"
				+ "        }\n"
				+ "        \n"
				+ "        // Reset sort icons\n"
				+ "        const sortIcons = document.getElementsByClassName(\"sort-icon\");\n"
				+ "        for (\n"
				+ "    let i = 0; i < sortIcons.length; i++) {\n"
				+ "    sortIcons[i].classList.remove(\"asc-icon\", \"desc-icon\");\n"
				+ "    }\n"
				+ "    // Set sort icon for the clicked column\n"
				+ "    const clickedHeader = document.getElementsByTagName(\"th\")[columnIndex];\n"
				+ "    const sortIcon = clickedHeader.querySelector(\".sort-icon\");\n"
				+ "    sortIcon.classList.add(dir === \"asc\" ? \"asc-icon\" : \"desc-icon\");\n"
				+ "    }\n"
				+ "    \n"
				+ "    const headers = document.getElementsByTagName(\"th\");\n"
				+ "    for (let i = 0; i < headers.length; i++) {\n"
				+ "    headers[i].addEventListener(\"click\", function() {\n"
				+ "    sortTable(i);\n"
				+ "    });\n"
				+ "    }\n"
				+ "function handleLinkClick(event) {\n"
				+ "    event.preventDefault(); // Prevent the default link behavior\n"
				+ "    var link = event.target;\n"
				+ "    var url = window.location.href;\n"
				+ "    var name = link.getAttribute(\"href\");\n"
				+ "    var newUrl = url + \"/\" + name;\n"
				+ "    window.location.href = newUrl; // Navigate to the new URL\n"
				+ "  }\n"
				+ "\n"
				+ "  const links = document.getElementsByTagName(\"a\");\n"
				+ "  for (let i = 0; i < links.length; i++) {\n"
				+ "    links[i].addEventListener(\"click\", handleLinkClick);\n"
				+ "  }"
				+ "    </script>\n"
				+ "\n"
				+ "  </body>\n"
				+ "</html>";
	}
}
